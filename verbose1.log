#### F:\leela\lc0-v0.20.2-t40B\lc0.exe nodes=1000
   return 
   
agree with ICCF 
  nodesUsed 
         positionId
             pieces 
                   network
                           verbose
1, 2065, 1,   27, 42371,       c3d4  (486 )    N: 1632 (+115) (P: 28.89%) (Q: -0.02460) (D:  0.000) (U: 0.02396) (Q+U: -0.00065) (V:  0.0861)  
1, 2332, 8,   24, 42371,       f1b1  (123 )    N: 1496 (+24) (P: 19.75%) (Q:  0.10332) (D:  0.000) (U: 0.02015) (Q+U:  0.12348) (V:  0.1887)  
1, 2116, 16,  26, 42371,       b1b3  (35  )    N: 1649 (+78) (P:  9.70%) (Q: -0.02780) (D:  0.001) (U: 0.00824) (Q+U: -0.01956) (V: -0.0406)  
1, 1937, 18,  24, 42371,       b3b2  (442 )    N: 1536 (+85) (P: 14.79%) (Q: -0.04040) (D:  0.000) (U: 0.01275) (Q+U: -0.02764) (V: -0.0710)  
1, 3067, 13,  32, 42371,       e1g1  (103 )    N:  813 (+92) (P: 16.74%) (Q:  0.08493) (D:  0.000) (U: 0.03355) (Q+U:  0.11848) (V:  0.0795)  
1, 2897, 9,   30, 42371,       d4f3  (751 )    N:  943 (+115) (P: 12.41%) (Q:  0.19873) (D:  0.000) (U: 0.02058) (Q+U:  0.21931) (V:  0.1582)  
1, 2231, 6,   21, 42371,       b3d2  (444 )    N: 1586 (+237) (P: 15.64%) (Q:  0.09261) (D:  0.003) (U: 0.01298) (Q+U:  0.10559) (V:  0.1238)  
1, 2956, 19,  11, 42371,       g2h2  (371 )    N: 1324 (+272) (P: 27.75%) (Q:  0.41515) (D:  0.000) (U: 0.03088) (Q+U:  0.44603) (V:  0.4063)  
1, 2796, 4,   12, 42371,       h1g2  (179 )    N: 1266 (+64) (P: 12.26%) (Q:  0.34313) (D:  0.000) (U: 0.01585) (Q+U:  0.35898) (V:  0.2611)  
1, 1879, 11,  16, 42371,       d5f3  (992 )    N: 1686 (+355) (P: 22.05%) (Q:  0.05850) (D:  0.000) (U: 0.01485) (Q+U:  0.07335) (V: -0.4563)  
1, 2993, 5,   16, 42371,       a2g8  (217 )    N: 1514 (+49) (P: 23.85%) (Q:  0.22364) (D:  0.000) (U: 0.02730) (Q+U:  0.25094) (V:  0.1601)  
1, 1905, 2,   17, 42371,       b8d6  (1633)    N: 1687 (+193) (P: 22.58%) (Q:  0.18898) (D:  0.000) (U: 0.01664) (Q+U:  0.20562) (V:  0.1041)  
0, 2867, 17,  28, 42371,       a4a5  (667 )    N: 1158 (+391) (P: 15.58%) (Q:  0.01599) (D:  0.000) (U: 0.01755) (Q+U:  0.03354) (V: -0.0337)  
0, 2753, 10,  28, 42371,       d1c1  (74  )    N: 1316 (+215) (P: 13.35%) (Q:  0.28150) (D:  0.000) (U: 0.01486) (Q+U:  0.29636) (V:  0.5830)  
0, 2979, 14,  26, 42371,       b1c1  (24  )    N: 1252 (+143) (P:  1.94%) (Q: -0.03327) (D:  0.000) (U: 0.00248) (Q+U: -0.03079) (V:  0.0244)  
0, 1990, 15,  16, 42371,       d4c3  (748 )    N: 1532 (+73) (P: 14.71%) (Q:  0.09944) (D:  0.003) (U: 0.01300) (Q+U:  0.11245) (V:  0.0739)  
0, 2295, 3,   22, 42371,       f1g1  (127 )    N: 1461 (+227) (P: 27.93%) (Q:  0.31002) (D:  0.000) (U: 0.02543) (Q+U:  0.33545) (V:  0.2503)  
0, 3073, 7,   18, 42371,       d6b4  (1233)    N:  492 (+27) (P: 11.00%) (Q:  0.02902) (D:  0.000) (U: 0.03843) (Q+U:  0.06746) (V:  0.0131)  
0, 3000, 12,  32, 42371,       f1e1  (126 )    N: 1066 (+109) (P: 18.53%) (Q:  0.08104) (D:  0.000) (U: 0.02824) (Q+U:  0.10929) (V:  0.0715)  
Here is a decoder that Chad gave. some differences 
also chad gave  a reference to the code where this is made
https://github.com/LeelaChessZero/lc0/blob/7ffe62de9f8c05cc395a7241703aade6be33c68f/src/mcts/search.cc#L227-L267

                              e2e4 N: 329 (+ 4) (V: -12.34%) (P:38.12%) (Q: -0.2325) (U: 0.2394) (Q+U: 0.0069)
                               ^      ^    ^      ^           ^          ^            ^           ^
                               |      |    |      |           |          |            |           Q+U, see below
                               |      |    |      |           |          |           U from PUCT formula,
                               |      |    |      |           |          |           see below.
                               |      |    |      |           |         Average value of V in a subtree
                               |      |    |      |          Probability of this move, from NN, but if Dirichlet
                               |      |    |      |          node is on, it's also added here, 0%..100%
                               |      |    |     Expected outcome for this position, directly from NN, -100%..100%
                               |      |   How many visits are processed by other threads when this is printed.
                               |     Number of visits. The move with maximum visits is chosen for play.
                              Move

* U = P * Cpuct * sqrt(sum of N of all moves) / (N + 1)
  CPuct is a search parameter, can be changed with a command line flag.
* The move with largest Q+U will be visited next